
Task1 [X] Проверить UUID на валидность без регулярных выражений
Написать функцию, принимающую строку и возвращающую, является ли переданная строка корректным
UUID. Корректный UUID – это 32 шестнадцатеричных цифры, разделённые дефисами на 5 групп длиной
8, 4, 4, 4 и 12 символов соответственно (всего 36 символов).


Task2 [X] Делится ли число на каждую из его цифр?
Написать функцию, принимающую целое число и возвращающую, делится ли оно на каждую из его цифр.
Для чисел, содержащих 0, ответ, естественно, отрицательный.
+ [X] покрыть тестами


Task3 [] Эмулятор кнопок голосования
У пользователя есть возможность нажатием кнопки изменить рейтинг вопроса увеличив или
уменьшив его на 1. Разумеется, он может не использовать эту возможность и сохранить
рейтинг 0. Однако, он может нажимать кнопки голосования несколько раз. Если нажимаемая кнопка 
уже включена, то происходит переход в нейтральное состояние, в противном случае, кнопка переходит 
во включенное состояние.
Обозначим нажатие кнопки увеличения знаком ^, а кнопки уменьшения знаком v.
Написать функцию, принимающую строку, состоящую только из этих символов, и возвращающую итоговый
рейтинг вопроса после всех нажатий. Вернуть надо одно из трёх чисел: 1, 0 или -1.


Task4 [X] Камень – ножницы – бумага
Написать программу, которая играет с пользователем в камень-ножницы-бумага.



Task5 [] Нумерация страниц в стиле xkcd
Книга Рендалла Мунро «xkcd, том 0» использует довольно странную систему нумерации страниц:
1, 2, 10, 11, 12, 20, 100, 101, 102, 110, 111, 112, 120, 200, 1000, 1001, ...
Она несколько похожа на троичную, но перепрыгивает с 20 на 100, со 120 на 200 и с 200 на 1000. Один из способов определить всю эту последовательность – это выбрать из всех троичных чисел те, которые содержат не более одной двойки и не содержат единиц после двойки. В OEIS эта последовательность имеет номер A169683, а система счисления известна как skew binary.
Требуется написать функцию, принимающую число, и возвращающую строку с его представлением в
описанной системе счисления.


Task6 [] Восьмеричный, десятичный, а может шестнадцатеричный?
Дана некая строка, состоящая из букв латинского алфавита и цифр. Следует определить, возможно ли
интерпретировать эту строку как число в системе счисления по основанию 8, 10 и 16. Для тех систем
счисления (среди перечисленных), где это возможно, и где результат является кодом печатного ascii-символа (0x20 по 0x7E), следует получить этот символ.
Требуется написать функцию, принимающую строку и возвращающую массив символов, полученных
описанным выше способом. Если печатных символов получить не удалось, следует вернуть пустой массив.
+ [X] покрыть тестами


Task 7 [X] FizzBuzz
Написать функцию, принимающую целое число n и возвращающую массив из n строк. Для получения массива
следует взять все числа от 1 до n включительно и заменить их следующим образом:
➢ Если число делится на 3, заменить его на "Fizz".
➢ Если число делится на 5, заменить его на "Buzz".
➢ Если число делится на 3 и на 5 одновременно, заменить его на "FizzBuzz".
➢ В остальных случаях просто преобразовать число в строку.
+ [] покрыть тестами


Task 8 [X] День рождения
Сделать html-страницу, которая при открытии при помощи prompt запрашивает число – возраст.


Task 9 [X] Слияние строк
Даны две строки, состоящие из точек, цифр и латинских букв. Точка означает пустоту.
Нужно посимвольно объединить эти строки, по следующим правилам:
➢ Если в обеих строках в данной позиции точка, то результат точка.
➢ Если только в одной из строк в данной позиции не точка, то результат – этот символ.
➢ Если в обеих строках в данной позиции не точка, то результат – символ из второй строки.
➢ Если одна из строк длиннее, то её хвост добавляется к результату.


Task 10 [] Сколько нужно времени, чтобы всё посмотреть?
Есть многострочный текст, содержащий длительности видео в одном из следующих форматов:
Написать функцию, принимающую этот текст в виде строки и возвращающую объект с четырьмя полями:
количеством дней, часов, минут и секунд, которые потребуются, чтобы посмотреть все видео.